version: '3.9'
services:
  main:
    build:
      context: ./docker
      dockerfile: Dockerfile.compose
    entrypoint: /compose-entrypoint.sh
    ports:
      - '3000:3000'
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_started
    environment:
      - HOST=${HOST:-localhost}
      - PROTOCOL=${PROTOCOL:-https}
      - PORT=3000
      - APP_ENV=production
      - APP_TITLE=Flowndly
      - TELEMETRY_ENABLED=false
      - REDIS_HOST=redis
      - POSTGRES_HOST=postgres
      - POSTGRES_DATABASE=${POSTGRES_DATABASE:-automatisch}
      - POSTGRES_USERNAME=${POSTGRES_USERNAME:-automatisch_user}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_ENABLE_SSL=${POSTGRES_ENABLE_SSL:-false}
      - ENCRYPTION_KEY=${ENCRYPTION_KEY}
      - WEBHOOK_SECRET_KEY=${WEBHOOK_SECRET_KEY}
      - APP_SECRET_KEY=${APP_SECRET_KEY}
      - LOG_LEVEL=${LOG_LEVEL:-info}
    volumes:
      - automatisch_storage:/automatisch/storage
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  worker:
    build:
      context: ./docker
      dockerfile: Dockerfile.compose
    entrypoint: /compose-entrypoint.sh
    depends_on:
      - main
    environment:
      - APP_ENV=production
      - APP_TITLE=Flowndly
      - TELEMETRY_ENABLED=false
      - REDIS_HOST=redis
      - POSTGRES_HOST=postgres
      - POSTGRES_DATABASE=${POSTGRES_DATABASE:-automatisch}
      - POSTGRES_USERNAME=${POSTGRES_USERNAME:-automatisch_user}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_ENABLE_SSL=${POSTGRES_ENABLE_SSL:-false}
      - ENCRYPTION_KEY=${ENCRYPTION_KEY}
      - WEBHOOK_SECRET_KEY=${WEBHOOK_SECRET_KEY}
      - APP_SECRET_KEY=${APP_SECRET_KEY}
      - WORKER=true
      - LOG_LEVEL=${LOG_LEVEL:-info}
    volumes:
      - automatisch_storage:/automatisch/storage
    restart: unless-stopped

  postgres:
    image: 'postgres:14.5'
    environment:
      - POSTGRES_DB=${POSTGRES_DATABASE:-automatisch}
      - POSTGRES_USER=${POSTGRES_USERNAME:-automatisch_user}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: [ 'CMD-SHELL', 'pg_isready -U $${POSTGRES_USER} -d $${POSTGRES_DB}' ]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  redis:
    image: 'redis:7.0.4'
    volumes:
      - redis_data:/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  automatisch_storage:
  postgres_data:
  redis_data:
