name: Automatisch Release
on:
  pull_request:
    branches:
      - 'main'
      - 'release-github-action'
    types: [opened, synchronize, reopened]
  workflow_dispatch:
    inputs:
      version:
        description: 'Release version (e.g., 1.2.3)'
        required: true
        type: string

jobs:
  check-release-branch:
    runs-on: ubuntu-latest
    outputs:
      is-release: ${{ steps.check.outputs.is-release }}
      version: ${{ steps.check.outputs.version }}
    steps:
      - name: Check if this is a release branch
        id: check
        run: |
          if [[ "${{ github.event_name }}" == "workflow_dispatch" ]]; then
            echo "is-release=true" >> $GITHUB_OUTPUT
            echo "version=${{ github.event.inputs.version }}" >> $GITHUB_OUTPUT
          elif [[ "${{ github.event_name }}" == "pull_request" ]]; then
            BRANCH_NAME="${{ github.head_ref }}"
            if [[ $BRANCH_NAME =~ ^release/v([0-9]+\.[0-9]+\.[0-9]+)$ ]]; then
              echo "is-release=true" >> $GITHUB_OUTPUT
              echo "version=${BASH_REMATCH[1]}" >> $GITHUB_OUTPUT
              echo "‚úÖ Detected release branch: $BRANCH_NAME (version: ${BASH_REMATCH[1]})"
            else
              echo "is-release=false" >> $GITHUB_OUTPUT
              echo "‚ùå Not a release branch: $BRANCH_NAME"
            fi
          else
            echo "is-release=false" >> $GITHUB_OUTPUT
          fi

  release:
    runs-on: ubuntu-latest
    needs: check-release-branch
    if: needs.check-release-branch.outputs.is-release == 'true'
    steps:
      - run: echo "üéâ The job was automatically triggered by a ${{ github.event_name }} event."
      - run: echo "üêß This job is now running on a ${{ runner.os }} server hosted by GitHub!"
      - run: echo "üîé The name of your branch is ${{ github.ref }} and your repository is ${{ github.repository }}."

      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '22.15.0'
          cache: 'yarn'
          cache-dependency-path: packages/backend/yarn.lock

      - run: echo "üí° The ${{ github.repository }} repository has been cloned to the runner."
      - run: echo "üñ•Ô∏è The workflow is now ready to test your code on the runner."

      - name: Install dependencies
        run: yarn --frozen-lockfile
        working-directory: packages/backend

      - name: Run linting
        run: yarn lint
        working-directory: packages/backend

      - name: Set version
        id: set_version
        run: |
          VERSION="${{ needs.check-release-branch.outputs.version }}"
          echo "VERSION=$VERSION" >> $GITHUB_OUTPUT
          echo "Using version: $VERSION"

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          driver: docker-container
          buildkitd-flags: --allow-insecure-entitlement security.insecure --allow-insecure-entitlement network.host
          use: true
          install: true

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker images
        uses: docker/build-push-action@v5
        with:
          context: .
          file: docker/Dockerfile
          platforms: linux/amd64,linux/arm64,linux/arm/v7
          push: true
          tags: |
            automatischio/automatisch:${{ steps.set_version.outputs.VERSION }}
            automatischio/automatisch:latest
            ghcr.io/automatisch/automatisch:${{ steps.set_version.outputs.VERSION }}
            ghcr.io/automatisch/automatisch:latest

      - run: echo "üçè This job's status is ${{ job.status }}."
